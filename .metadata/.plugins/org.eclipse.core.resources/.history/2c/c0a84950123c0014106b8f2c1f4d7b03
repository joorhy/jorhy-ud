#!/usr/bin/env python
# -*- coding: utf-8 -*- 

###########################################################################
## Python code generated with wxFormBuilder (version Jun  5 2014)
## http://www.wxformbuilder.org/
##
## PLEASE DO "NOT" EDIT THIS FILE!
###########################################################################

import wx
import wx.xrc
import wx.dataview

###########################################################################
## Class CPopDishesInfo
###########################################################################

class CPopDishesInfo ( wx.Dialog ):
    
    def __init__( self, parent ):
        wx.Dialog.__init__ ( self, parent, id = wx.ID_ANY, title = u"菜品资料维护", pos = wx.DefaultPosition, size = wx.Size( 700,500 ), style = wx.CAPTION )
        
        self.SetSizeHintsSz( wx.DefaultSize, wx.DefaultSize )
        
        m_fgSizer = wx.FlexGridSizer( 3, 1, 0, 0 )
        m_fgSizer.SetFlexibleDirection( wx.BOTH )
        m_fgSizer.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )
        
        m_topSizer = wx.BoxSizer( wx.HORIZONTAL )
        
        self.m_staticTextNum = wx.StaticText( self, wx.ID_ANY, u"1 / 20", wx.DefaultPosition, wx.DefaultSize, 0 )
        self.m_staticTextNum.Wrap( -1 )
        m_topSizer.Add( self.m_staticTextNum, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        self.m_btnPrev = wx.Button( self, wx.ID_ANY, u"上一记录", wx.DefaultPosition, wx.DefaultSize, 0 )
        m_topSizer.Add( self.m_btnPrev, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        self.m_btnNext = wx.Button( self, wx.ID_ANY, u"下一记录", wx.DefaultPosition, wx.DefaultSize, 0 )
        m_topSizer.Add( self.m_btnNext, 0, wx.ALL, 5 )
        
        
        m_topSizer.AddSpacer( ( 0, 0), 1, wx.EXPAND, 5 )
        
        self.m_btnSave = wx.Button( self, wx.ID_ANY, u"保存", wx.DefaultPosition, wx.DefaultSize, 0 )
        m_topSizer.Add( self.m_btnSave, 0, wx.ALL, 5 )
        
        self.m_btnExit = wx.Button( self, wx.ID_ANY, u"退出", wx.DefaultPosition, wx.DefaultSize, 0 )
        m_topSizer.Add( self.m_btnExit, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        
        m_fgSizer.Add( m_topSizer, 1, wx.EXPAND, 5 )
        
        m_midFgSizer = wx.FlexGridSizer( 0, 2, 0, 0 )
        m_midFgSizer.SetFlexibleDirection( wx.BOTH )
        m_midFgSizer.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )
        
        m_midLeftSizer = wx.BoxSizer( wx.VERTICAL )
        
        self.m_panel = wx.Panel( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( 500,200 ), wx.STATIC_BORDER|wx.TAB_TRAVERSAL )
        self.m_panel.SetMaxSize( wx.Size( -1,200 ) )
        
        m_panelSizer = wx.BoxSizer( wx.HORIZONTAL )
        
        m_panelSizer.SetMinSize( wx.Size( 500,200 ) ) 
        m_midLeftGSizer = wx.GridSizer( 6, 2, 0, 0 )
        
        self.m_staticText1 = wx.StaticText( self.m_panel, wx.ID_ANY, u"品码：", wx.DefaultPosition, wx.DefaultSize, 0 )
        self.m_staticText1.Wrap( -1 )
        m_midLeftGSizer.Add( self.m_staticText1, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        self.m_txtDishCode = wx.TextCtrl( self.m_panel, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, 0 )
        m_midLeftGSizer.Add( self.m_txtDishCode, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        self.m_staticText2 = wx.StaticText( self.m_panel, wx.ID_ANY, u"单位：", wx.DefaultPosition, wx.DefaultSize, 0 )
        self.m_staticText2.Wrap( -1 )
        m_midLeftGSizer.Add( self.m_staticText2, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        m_cbxUnitChoices = []
        self.m_cbxUnit = wx.ComboBox( self.m_panel, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, m_cbxUnitChoices, 0 )
        m_midLeftGSizer.Add( self.m_cbxUnit, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        self.m_staticText3 = wx.StaticText( self.m_panel, wx.ID_ANY, u"售价：", wx.DefaultPosition, wx.DefaultSize, 0 )
        self.m_staticText3.Wrap( -1 )
        m_midLeftGSizer.Add( self.m_staticText3, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        self.m_txtPrice = wx.TextCtrl( self.m_panel, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, 0 )
        m_midLeftGSizer.Add( self.m_txtPrice, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        self.m_staticText4 = wx.StaticText( self.m_panel, wx.ID_ANY, u"规格：", wx.DefaultPosition, wx.DefaultSize, 0 )
        self.m_staticText4.Wrap( -1 )
        m_midLeftGSizer.Add( self.m_staticText4, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        m_cbxSpecChoices = []
        self.m_cbxSpec = wx.ComboBox( self.m_panel, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, m_cbxSpecChoices, 0 )
        m_midLeftGSizer.Add( self.m_cbxSpec, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        self.m_staticText5 = wx.StaticText( self.m_panel, wx.ID_ANY, u"做法：", wx.DefaultPosition, wx.DefaultSize, 0 )
        self.m_staticText5.Wrap( -1 )
        m_midLeftGSizer.Add( self.m_staticText5, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        m_cbxStyleChoices = []
        self.m_cbxStyle = wx.ComboBox( self.m_panel, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, m_cbxStyleChoices, 0 )
        m_midLeftGSizer.Add( self.m_cbxStyle, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        self.m_staticText101 = wx.StaticText( self.m_panel, wx.ID_ANY, u"ͣ停用"， wx.DefaultPosition, wx.DefaultSize, 0 )
        self.m_staticText101.Wrap( -1 )
        m_midLeftGSizer.Add( self.m_staticText101, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        self.m_cbxStop = wx.CheckBox( self.m_panel, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.Size( -1,-1 ), 0 )
        m_midLeftGSizer.Add( self.m_cbxStop, 0, wx.ALIGN_CENTER, 5 )
        
        
        m_panelSizer.Add( m_midLeftGSizer, 1, wx.EXPAND, 5 )
        
        m_midRightGSizer = wx.GridSizer( 6, 2, 0, 0 )
        
        self.m_staticText6 = wx.StaticText( self.m_panel, wx.ID_ANY, u"菜品名称：", wx.DefaultPosition, wx.DefaultSize, 0 )
        self.m_staticText6.Wrap( -1 )
        m_midRightGSizer.Add( self.m_staticText6, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        self.m_txtDishName = wx.TextCtrl( self.m_panel, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, 0 )
        m_midRightGSizer.Add( self.m_txtDishName, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        self.m_staticText7 = wx.StaticText( self.m_panel, wx.ID_ANY, u"拼音简码：", wx.DefaultPosition, wx.DefaultSize, 0 )
        self.m_staticText7.Wrap( -1 )
        m_midRightGSizer.Add( self.m_staticText7, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        self.m_txtBrevityCode = wx.TextCtrl( self.m_panel, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, 0 )
        m_midRightGSizer.Add( self.m_txtBrevityCode, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        self.m_staticText8 = wx.StaticText( self.m_panel, wx.ID_ANY, u"所属类别：", wx.DefaultPosition, wx.DefaultSize, 0 )
        self.m_staticText8.Wrap( -1 )
        m_midRightGSizer.Add( self.m_staticText8, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        m_cbxCategoryChoices = []
        self.m_cbxCategory = wx.ComboBox( self.m_panel, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, m_cbxCategoryChoices, 0 )
        m_midRightGSizer.Add( self.m_cbxCategory, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        self.m_staticText9 = wx.StaticText( self.m_panel, wx.ID_ANY, u"折扣比率：", wx.DefaultPosition, wx.DefaultSize, 0 )
        self.m_staticText9.Wrap( -1 )
        m_midRightGSizer.Add( self.m_staticText9, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        self.m_txtDiscount = wx.TextCtrl( self.m_panel, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, 0 )
        m_midRightGSizer.Add( self.m_txtDiscount, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        self.m_staticText10 = wx.StaticText( self.m_panel, wx.ID_ANY, u"提成比率：", wx.DefaultPosition, wx.DefaultSize, 0 )
        self.m_staticText10.Wrap( -1 )
        m_midRightGSizer.Add( self.m_staticText10, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        self.m_txtCommition = wx.TextCtrl( self.m_panel, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, 0 )
        m_midRightGSizer.Add( self.m_txtCommition, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        
        m_panelSizer.Add( m_midRightGSizer, 1, wx.EXPAND, 5 )
        
        
        self.m_panel.SetSizer( m_panelSizer )
        self.m_panel.Layout()
        m_midLeftSizer.Add( self.m_panel, 1, wx.EXPAND |wx.ALL, 5 )
        
        
        m_midFgSizer.Add( m_midLeftSizer, 1, wx.EXPAND, 5 )
        
        m_midRightFgSizer = wx.FlexGridSizer( 2, 1, 0, 0 )
        m_midRightFgSizer.SetFlexibleDirection( wx.BOTH )
        m_midRightFgSizer.SetNonFlexibleGrowMode( wx.FLEX_GROWMODE_SPECIFIED )
        
        m_midImageSizer = wx.BoxSizer( wx.VERTICAL )
        
        self.m_bmtImage = wx.StaticBitmap( self, wx.ID_ANY, wx.NullBitmap, wx.DefaultPosition, wx.Size( 150,150 ), wx.TAB_TRAVERSAL )
        m_midImageSizer.Add( self.m_bmtImage, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        
        m_midRightFgSizer.Add( m_midImageSizer, 1, wx.EXPAND, 5 )
        
        m_midCtrlSiezr = wx.BoxSizer( wx.HORIZONTAL )
        
        self.m_btnImport = wx.Button( self, wx.ID_ANY, u"图片导入", wx.DefaultPosition, wx.Size( 80,30 ), 0|wx.TAB_TRAVERSAL )
        m_midCtrlSiezr.Add( self.m_btnImport, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        self.m_btnClean = wx.Button( self, wx.ID_ANY, u"图片清除", wx.DefaultPosition, wx.DefaultSize, 0|wx.TAB_TRAVERSAL )
        m_midCtrlSiezr.Add( self.m_btnClean, 0, wx.ALIGN_CENTER|wx.ALL, 5 )
        
        
        m_midRightFgSizer.Add( m_midCtrlSiezr, 1, wx.EXPAND, 5 )
        
        
        m_midFgSizer.Add( m_midRightFgSizer, 1, wx.EXPAND, 5 )
        
        
        m_fgSizer.Add( m_midFgSizer, 1, wx.EXPAND, 5 )
        
        m_sbSizer = wx.StaticBoxSizer( wx.StaticBox( self, wx.ID_ANY, u"规格和做法设置" ), wx.HORIZONTAL )
        
        m_bottomLeftSizer = wx.BoxSizer( wx.VERTICAL )
        
        m_specListSizer = wx.BoxSizer( wx.VERTICAL )
        
        self.m_dataViewListSpec = wx.dataview.DataViewListCtrl( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( -1,140 ), 0 )
        self.m_dataViewListName = self.m_dataViewListSpec.AppendTextColumn( u"规格" ) 
        self.m_dataViewListPrice = self.m_dataViewListSpec.AppendTextColumn( u"价格" ) 
        m_specListSizer.Add( self.m_dataViewListSpec, 0, wx.ALL|wx.EXPAND, 5 )
        
        
        m_bottomLeftSizer.Add( m_specListSizer, 1, wx.EXPAND, 5 )
        
        m_specCtrlSizer = wx.BoxSizer( wx.HORIZONTAL )
        
        m_specCtrlSizer.SetMinSize( wx.Size( -1,200 ) ) 
        self.m_btnNewSpec = wx.Button( self, wx.ID_ANY, u"新增规格", wx.DefaultPosition, wx.DefaultSize, 0 )
        m_specCtrlSizer.Add( self.m_btnNewSpec, 0, wx.ALL, 5 )
        
        self.m_btnDelSpec = wx.Button( self, wx.ID_ANY, u"删除规格", wx.DefaultPosition, wx.DefaultSize, 0 )
        m_specCtrlSizer.Add( self.m_btnDelSpec, 0, wx.ALL, 5 )
        
        
        m_bottomLeftSizer.Add( m_specCtrlSizer, 1, wx.EXPAND, 5 )
        
        
        m_sbSizer.Add( m_bottomLeftSizer, 1, wx.EXPAND, 5 )
        
        m_bottomRightSizer = wx.BoxSizer( wx.VERTICAL )
        
        m_styleListSizer = wx.BoxSizer( wx.VERTICAL )
        
        self.m_dataViewListStyle = wx.dataview.DataViewListCtrl( self, wx.ID_ANY, wx.DefaultPosition, wx.Size( -1,140 ), 0 )
        self.m_dataViewListStyleDes = self.m_dataViewListStyle.AppendTextColumn( u"做法说明" ) 
        self.m_dataViewListAddPrice = self.m_dataViewListStyle.AppendTextColumn( u"加价金额" ) 
        self.m_dataViewListAddUnit = self.m_dataViewListStyle.AppendTextColumn( u"按量加价" ) 
        m_styleListSizer.Add( self.m_dataViewListStyle, 0, wx.ALL|wx.EXPAND, 5 )
        
        
        m_bottomRightSizer.Add( m_styleListSizer, 1, wx.EXPAND, 5 )
        
        m_styleCtrlSizer = wx.BoxSizer( wx.HORIZONTAL )
        
        self.m_btnNewStyle = wx.Button( self, wx.ID_ANY, u"新增做法", wx.DefaultPosition, wx.DefaultSize, 0 )
        m_styleCtrlSizer.Add( self.m_btnNewStyle, 0, wx.ALL, 5 )
        
        self.m_btnDelStyle = wx.Button( self, wx.ID_ANY, u"删除做法", wx.DefaultPosition, wx.DefaultSize, 0 )
        m_styleCtrlSizer.Add( self.m_btnDelStyle, 0, wx.ALL, 5 )
        
        
        m_bottomRightSizer.Add( m_styleCtrlSizer, 1, wx.EXPAND, 5 )
        
        
        m_sbSizer.Add( m_bottomRightSizer, 1, wx.EXPAND, 5 )
        
        
        m_fgSizer.Add( m_sbSizer, 1, wx.EXPAND, 5 )
        
        
        self.SetSizer( m_fgSizer )
        self.Layout()
        
        self.Centre( wx.BOTH )
        
        # Connect Events
        self.m_btnPrev.Bind( wx.EVT_BUTTON, self.OnBtnPrev )
        self.m_btnNext.Bind( wx.EVT_BUTTON, self.OnBtnNext )
        self.m_btnSave.Bind( wx.EVT_BUTTON, self.OnBtnSave )
        self.m_btnExit.Bind( wx.EVT_BUTTON, self.OnBtnExit )
        self.m_btnImport.Bind( wx.EVT_BUTTON, self.OnBtnImport )
        self.m_btnClean.Bind( wx.EVT_BUTTON, self.OnBtnClean )
        self.m_btnNewSpec.Bind( wx.EVT_BUTTON, self.OnBtnNewSpec )
        self.m_btnDelSpec.Bind( wx.EVT_BUTTON, self.OnBtnDelSpec )
        self.m_btnNewStyle.Bind( wx.EVT_BUTTON, self.OnBtnNewStyle )
        self.m_btnDelStyle.Bind( wx.EVT_BUTTON, self.OnBtnDelStyle )
    
    def __del__( self ):
        pass
    
    
    # Virtual event handlers, overide them in your derived class
    def OnBtnPrev( self, event ):
        event.Skip()
    
    def OnBtnNext( self, event ):
        event.Skip()
    
    def OnBtnSave( self, event ):
        event.Skip()
    
    def OnBtnExit( self, event ):
        event.Skip()
    
    def OnBtnImport( self, event ):
        event.Skip()
    
    def OnBtnClean( self, event ):
        event.Skip()
    
    def OnBtnNewSpec( self, event ):
        event.Skip()
    
    def OnBtnDelSpec( self, event ):
        event.Skip()
    
    def OnBtnNewStyle( self, event ):
        event.Skip()
    
    def OnBtnDelStyle( self, event ):
        event.Skip()
    
if __name__ == '__main__':
    app = wx.PySimpleApp()
    dlg = CPopDishesInfo(None)
    dlg.Show()
    app.MainLoop()

